/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface OracleSecurityModuleContract
  extends Truffle.Contract<OracleSecurityModuleInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<OracleSecurityModuleInstance>;
}

type AllEvents = never;

export interface OracleSecurityModuleInstance extends Truffle.ContractInstance {
  bud(arg0: string, txDetails?: Truffle.TransactionDetails): Promise<BN>;

  peek(txDetails?: Truffle.TransactionDetails): Promise<[string, boolean]>;

  peep(txDetails?: Truffle.TransactionDetails): Promise<[string, boolean]>;

  methods: {
    bud(arg0: string, txDetails?: Truffle.TransactionDetails): Promise<BN>;

    peek(txDetails?: Truffle.TransactionDetails): Promise<[string, boolean]>;

    peep(txDetails?: Truffle.TransactionDetails): Promise<[string, boolean]>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
